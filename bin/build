#!/usr/bin/env node

'use strict';

var babel = require('babel-core');

require('commoner').resolve(

  function(id) {
    var context = this;

    return context.getProvidedP().then(function(idToPath) {
      // If a module declares its own identifier using @providesModule
      // then that identifier will be a key in the idToPath object.
      if (idToPath.hasOwnProperty(id)) {
        return context.readFileP(idToPath[id]);
      }
    });
  },

  function(id) {
    // Otherwise assume the identifier maps directly to a filesystem path.
    return this.readModuleP(id);
  }

).process(

  function(id, source) {
    return babel.transform(source, { ast: false, optional: ['runtime'] }).code;
  },

  function(id, source) {
    return source.replace(/\s+$/m, '\n\n');
  }

);
